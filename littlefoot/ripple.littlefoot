const int numKeys = 24;

int channel[numKeys]; 
int intensity[numKeys];
int pressed[numKeys];
int hit[numKeys];

const int max = 64;

void initialise() {
  fillRect(0x00000000, 0, 0, 24, 1);
}

void keyStrike (int index, int z, int vz) {
  pressed[index] = 1;
  hit[index] = 255;

  int note = getNote (index);
  int chan = assignChannel (note);
  channel[index] = chan;

  sendNoteOn (chan, note, vz);
}

void keyPress (int index, int z, int vz)
{
    int note = getNote (index);
    int chan = channel[index];

    sendAftertouch (chan, note, z);
}

void keyLift (int index, int z, int vz)
{
    pressed[index] = 0;
    int note = getNote (index);
    int chan = channel[index];

    sendNoteOff (chan, note, vz);
    deassignChannel (note, chan);
}

int getNote(int index) {
  return 48 + 0 * 12 + index;
}

void repaint() {
  for(int i = 0; i < numKeys; i++) {
    if(hit[i] > 0) {
      hit[i] -= 1;
      int range = (255 - hit[i]);
      if(i - range >= 0) intensity[i - range] = 255;
      if(i + range < numKeys) intensity[i + range] = 255;
    }
  }
  for(int i = 0; i < numKeys; i++) {
    intensity[i] /= 4;
    if(pressed[i]) intensity[i] = 255;
  }
  for(int i = 0; i < numKeys; i++) {
    fillPixel(makeARGB(255, 0, intensity[i] / 2, intensity[i]), i, 0);
  }
}
